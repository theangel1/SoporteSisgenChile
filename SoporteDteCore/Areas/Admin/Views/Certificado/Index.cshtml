@model IEnumerable<SoporteDteCore.Models.CertificadoDigital>

@{
    ViewData["Title"] = "Certificados Digitales";
}
<div class="row">
    <div class="col-lg-6">
        <h3 class="text-info">Controlador Certificados Digitales</h3>
    </div>
    <div class="col-lg-6 text-right">
        <a asp-action="Create" class="btn btn-outline-info col-sm-12 col-md-12 col-lg-1"
           data-toggle="tooltip" data-placement="top" title="Registrar Nuevo Certificado">
            <i class="fas fa-plus"></i>
        </a>
    </div>
</div>
<hr />
<div class="table-responsive">
    <table class="table table-bordered" id="tablaCertificados" width="100%">
        <thead>
            <tr>
                <th width="30%">
                    @Html.DisplayNameFor(model => model.NombreEmpresa)
                </th>

                <th width="15%">
                    RUT
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.FechaEmision)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.FechaVencimiento)
                </th>

                <th>Dias Restantes</th>

                <th>Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        $(document).ready(function () {
            $("#tablaCertificados").DataTable({
                "order": [[4, "asc"]],
                pageLength: 5,
                destroy: true,
                dom: 'Blfrtip',
                buttons: [
                     'excel'
                ],
                ajax: {
                    url: "/Admin/Certificado/LoadCerts",
                    type: "GET",
                    datatype: "json"
                },
                "columns": [
                    { "data": "nombreEmpresa" },
                    { "data": "rutEmpresa" },
                    {
                        "data": "fechaEmision",
                        render: function (d) {
                            return moment(d).format("DD-MM-YYYY");
                        }
                    },
                    {
                        "data": "fechaVencimiento",
                        render: function (d) {
                            return moment(d).format("DD-MM-YYYY");
                        }
                    },
                    {
                        "mRender": function (data, type, row) {
                            if (row.diasRestantes > 10) {
                                return "<label style='color:green'>" + row.diasRestantes + "</label>";
                            }
                            else {
                                return "<label style='color:red'>" + row.diasRestantes + "</label>";
                            }
                        }
                    },
                    {
                        "mRender": function (data, type, row) {
                            var linkEdit = '@Html.ActionLink("", "Edit", new {id= -1 }, new { @class = "btn btn-sm btn-outline-info far fa-edit"})';
                            linkEdit = linkEdit.replace("-1", row.id);

                            var linkDetail = '@Html.ActionLink("", "Details", new {id= -1 },new { @class = "btn btn-sm btn-outline-dark far fa-file-alt"})';
                            linkDetail = linkDetail.replace("-1", row.id);

                            var linkDelete = '@Html.ActionLink("", "Delete", new {id= -1 }, new { @class = "btn btn-sm btn-outline-danger fas fa-trash-alt"})';
                            linkDelete = linkDelete.replace("-1", row.id);

                            return linkEdit + linkDetail + linkDelete;
                        }
                    }

                ],
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ Resultados",
                    "infoEmpty": "Mostrando 0 to 0 of 0 resultados",
                    "infoFiltered": "(Filtrado de _MAX_ total Resultados)",
                    "infoPostFix": "",
                    "thousands": ",",
                    "lengthMenu": "Mostrar _MENU_ Resultados",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "Sin resultados encontrados",
                    "paginate": {
                        "first": "Primero",
                        "last": "Ultimo",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });
            orderDatatables();
        });
    </script>
}